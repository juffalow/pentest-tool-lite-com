import React, { useState, useEffect } from 'react';
import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';
import Alert from 'react-bootstrap/Alert';
import Button from 'react-bootstrap/Button';
import Form from 'react-bootstrap/Form';
import Table from 'react-bootstrap/Table';
import { Link, Redirect } from 'react-router-dom';
import SEO from '../components/SEO';
import { getDNS, createTest, getLastTests } from '../api/services';
import { isValidUrl } from '../utils/functions';

const Home: React.FC = () => {
  const [ error, setError ] = useState<string | null>(null);
  const [ url, setUrl ] = useState('');
  const [ id, setId ] = useState('');
  const [ formErrors, setFormErrors ] = useState<null | { url: string }>(null);

  const [ lastTests, setLastTests ] = useState<any>(null);

  const onUrlChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setUrl(event.target.value);
    setFormErrors(null);
    setError(null);
  };

  const onSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    event.stopPropagation();

    const form = event.currentTarget;

    setFormErrors(null);

    if (form.checkValidity()) {
      const urlWithScheme = url.startsWith('http://') || url.startsWith('https://') ? url : `https://${url}`;

      if (!isValidUrl(urlWithScheme)) {
        setFormErrors({ url: 'URL address is not valid!' });
        return;
      }

      const dns = await getDNS((new URL(urlWithScheme).hostname));

      if ('error' in dns) {
        setFormErrors({ url: 'No DNS records for this domain!' });
        return;
      }

      createTest(urlWithScheme).then((response) => {
        setId(response.data.test.id);
      }).catch(error => {
        setError(error.message);
      });
    }
  }

  useEffect(() => {
    getLastTests().then((response: any) => setLastTests(response));
  }, []);

  return (
    <SEO title="" description="">
      <Container>
        <Row style={{ marginTop: '20%' }}>
          <Col lg={{ span: 6, offset: 3 }} md={{ span: 8, offset: 2 }} sm={{ span: 10, offset: 1 }} xs={{ span: 12 }}>
            <h1 className="text-center">Pentest Tool LITE</h1>
            {
              error !== null ? (
                <Alert variant="danger">{error}</Alert>
              ) : null
            }
            <div className="mt-4">
              <Form onSubmit={onSubmit}>
                <Form.Group className="mb-3" controlId="url">
                  <Form.Control
                    size="lg"
                    type="text"
                    placeholder="Enter URL"
                    value={url}
                    onChange={onUrlChange}
                    isInvalid={formErrors !== null}
                    required
                  />
                  <Form.Control.Feedback type="invalid">
                    { formErrors !== null ? formErrors.url : '' }
                  </Form.Control.Feedback>
                </Form.Group>

                <div className="text-center">
                  <Button variant="outline-primary" type="submit">
                    Run tests
                  </Button>
                </div>
              </Form>
            </div>
          </Col>
        </Row>

        <Row style={{ marginTop: '5%' }}>
          <Col lg={{ span: 6, offset: 3 }} md={{ span: 8, offset: 2 }} sm={{ span: 10, offset: 1 }} xs={{ span: 12 }}>
            <div className="mt-4">
              <Table className="last-reports-table">
                <thead>
                  <tr>
                    <th>Last 10 test reports</th>
                  </tr>
                </thead>
                <tbody>
                  {
                    lastTests !== null && lastTests.data.lastTests.map((el:any) => (
                      <tr>
                        <td>
                          <Link to={(location:any) => `/report/${el.id}`}>{el.url}</Link>
                        </td>
                      </tr>
                    ))
                  }
                </tbody>
              </Table>
            </div>
          </Col>
        </Row>
      </Container>
      {
        id !== '' ? (
          <Redirect to={`/report/${id}`} />
        ) : null
      }
    </SEO>
  );
}

export default Home;
