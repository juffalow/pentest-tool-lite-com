import Pentest from 'pentest-tool-lite/src/Pentest';
import logger from '../logger';
import { countStatuses } from '../utils/functions';
import repositories from '../repositories';

const worker = async (id: string): Promise<{isDone: boolean}> => {
  logger.info('Worker started!', { id });

  await repositories.Test.update(id, 'running', '{}', 0, 0, 0);

  const test = await repositories.Test.get(id);

  logger.info('Starting new pentest!', { test });

  try {
    const pentest = new Pentest();
    const result = await pentest.run(test.url);

    const successCount = countStatuses(result.security, 'SUCCESS') + countStatuses(result.html, 'SUCCESS') + countStatuses(result.seo, 'SUCCESS') + countStatuses(result.wordpress, 'SUCCESS');
    const warningCount = countStatuses(result.security, 'WARNING') + countStatuses(result.html, 'WARNING') + countStatuses(result.seo, 'WARNING') + countStatuses(result.wordpress, 'WARNING');
    const errorCount = countStatuses(result.security, 'ERROR') + countStatuses(result.html, 'ERROR') + countStatuses(result.seo, 'ERROR') + countStatuses(result.wordpress, 'ERROR');

    await repositories.Test.update(id, 'done', result, successCount, warningCount, errorCount);
  } catch (error) {
    logger.error('Pentest run failed!', { message: error.message, stack: error.stack });

    await repositories.Test.update(id, 'error', { error: error.message }, 0, 0, 0);
  }

  return { isDone: true };
};

export default worker;
