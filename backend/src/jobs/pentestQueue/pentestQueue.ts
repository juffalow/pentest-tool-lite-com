import Queue from 'bull'
import path from 'path';
import { getBullOptions } from '../connection';
import config from '../../config';

let pentestQueue = null;

const getStubPentestQueue = (): Queue.Queue => {
  const stubPentestQueue = new Proxy(new Object(), {
    get() {
      return (): unknown => {
        return stubPentestQueue;
      }
    }
  });

  return stubPentestQueue as Queue.Queue;
}

const getBullPentestQueue = (): Queue.Queue => {
  const options = getBullOptions();
  const bullPentestQueue = new Queue('pentest-queue', {
    ...options,
    settings: {
      maxStalledCount: 0,
    },
    defaultJobOptions: {
      removeOnComplete: true,
      removeOnFail: true,
    },
  });
  bullPentestQueue.process(path.join(__dirname, 'pentestWorker.js'));

  return bullPentestQueue;
}

const getPentestQueue = (): Queue.Queue => {
  if (pentestQueue !== null) {
    return pentestQueue;
  }

  if (config.cache.connection.host === null || config.cache.connection.host === '') {
    pentestQueue = getStubPentestQueue();

    return pentestQueue;
  }

  pentestQueue = getBullPentestQueue();

  return pentestQueue;
}

export { getPentestQueue };
